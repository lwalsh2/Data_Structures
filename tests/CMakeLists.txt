# Call each struct to compile
add_executable(b_tree_test b_tree_test.c)
add_executable(binary_tree_test binary_tree_test.c)
add_executable(double_linked_list_test double_linked_list_test.c)
add_executable(fibonacci_arr_test fibonacci_arr_test.c)
add_executable(fibonacci_loop_test fibonacci_loop_test.c)
add_executable(fibonacci_rec_test fibonacci_rec_test.c)
add_executable(fibonacci_tree_test fibonacci_tree_test.c)
add_executable(hash_table_test hash_table_test.c)
add_executable(heap_test heap_test.c)
add_executable(queue_test queue_test.c)
add_executable(single_linked_list_test single_linked_list_test.c)
add_executable(stack_test stack_test.c)

target_link_libraries(b_tree_test b_tree)
target_link_libraries(binary_tree_test binary_tree)
target_link_libraries(double_linked_list_test double_linked_list)
target_link_libraries(fibonacci_arr_test fibonacci_arr)
target_link_libraries(fibonacci_loop_test fibonacci_loop)
target_link_libraries(fibonacci_rec_test fibonacci_rec)
target_link_libraries(fibonacci_tree_test fibonacci_tree)
target_link_libraries(hash_table_test hash_table)
target_link_libraries(heap_test heap)
target_link_libraries(queue_test queue)
target_link_libraries(single_linked_list_test single_linked_list)
target_link_libraries(stack_test stack)
